language: c++

sudo: required
dist: trusty

cache:
  directories:
    - ${TRAVIS_BUILD_DIR}/deps

matrix:
  include:
    # GCC 6
    - os: linux
      compiler: gcc
      env: BUILD_TYPE=Debug COVERALLS=ON COMPILER=g++-6 BOOST_VERSION=1.63.0
      addons: &gcc6
        apt:
          packages:
            - g++-6
          sources:
            - ubuntu-toolchain-r-test

    - os: linux
      compiler: gcc
      env: BUILD_TYPE=Release COVERALLS=OFF COMPILER=g++-6 BOOST_VERSION=1.63.0
      addons: *gcc6

    # Clang 3.7
    - os: linux
      compiler: clang
      env: BUILD_TYPE=Debug COVERALLS=OFF LLVM_VERSION=3.7.0 BOOST_VERSION=1.63.0

    - os: linux
      compiler: clang
      env: BUILD_TYPE=Release COVERALLS=OFF LLVM_VERSION=3.7.0 BOOST_VERSION=1.63.0

install:
  # Set the Compiler
  - if [[ "${COMPILER}" != "" ]]; then export CXX=${COMPILER}; fi
  
  # Install Clang, libc++ and libc++abi
  - |
    if [[ "${LLVM_VERSION}" != "" ]]; then
      LLVM_DIR=${TRAVIS_BUILD_DIR}/deps/llvm-${LLVM_VERSION}
      if [[ -z "$(ls -A ${LLVM_DIR})" ]]; then
        LLVM_URL="http://llvm.org/releases/${LLVM_VERSION}/llvm-${LLVM_VERSION}.src.tar.xz"
        LIBCXX_URL="http://llvm.org/releases/${LLVM_VERSION}/libcxx-${LLVM_VERSION}.src.tar.xz"
        LIBCXXABI_URL="http://llvm.org/releases/${LLVM_VERSION}/libcxxabi-${LLVM_VERSION}.src.tar.xz"
        CLANG_URL="http://llvm.org/releases/${LLVM_VERSION}/clang+llvm-${LLVM_VERSION}-x86_64-linux-gnu-ubuntu-14.04.tar.xz"
        mkdir -p ${LLVM_DIR} ${LLVM_DIR}/build ${LLVM_DIR}/projects/libcxx ${LLVM_DIR}/projects/libcxxabi ${LLVM_DIR}/clang
        travis_retry wget --quiet -O - ${LLVM_URL}      | tar --strip-components=1 -xJ -C ${LLVM_DIR}
        travis_retry wget --quiet -O - ${LIBCXX_URL}    | tar --strip-components=1 -xJ -C ${LLVM_DIR}/projects/libcxx
        travis_retry wget --quiet -O - ${LIBCXXABI_URL} | tar --strip-components=1 -xJ -C ${LLVM_DIR}/projects/libcxxabi
        travis_retry wget --quiet -O - ${CLANG_URL}     | tar --strip-components=1 -xJ -C ${LLVM_DIR}/clang
        (cd ${LLVM_DIR}/build && cmake .. -DCMAKE_INSTALL_PREFIX=${LLVM_DIR}/install -DCMAKE_CXX_COMPILER=clang++)
        (cd ${LLVM_DIR}/build/projects/libcxx && make install -j2)
        (cd ${LLVM_DIR}/build/projects/libcxxabi && make install -j2)
      fi
      export CXXFLAGS="-nostdinc++ -isystem ${LLVM_DIR}/install/include/c++/v1"
      export LDFLAGS="-L ${LLVM_DIR}/install/lib -l c++ -l c++abi"
      export LD_LIBRARY_PATH="${LD_LIBRARY_PATH}:${LLVM_DIR}/install/lib"
      export PATH="${LLVM_DIR}/clang/bin:${PATH}"
    fi
  - ${CXX} --version

  # Install Boost
  - BOOST_DIR=${TRAVIS_BUILD_DIR}/deps/boost-${BOOST_VERSION}
  - mkdir -p ${BOOST_DIR} && cd ${BOOST_DIR}
  - |
      if [[ "${BOOST_VERSION}" == "trunk" ]]; then
        BOOST_URL="http://github.com/boostorg/boost.git"
        travis_retry git clone --depth 1 --recursive --quiet ${BOOST_URL} ${BOOST_DIR} || exit 1
        (cd ${BOOST_DIR} && ./bootstrap.sh && ./b2 headers)
      else
        BOOST_URL="http://sourceforge.net/projects/boost/files/boost/${BOOST_VERSION}/boost_${BOOST_VERSION//\./_}.tar.gz"
        mkdir -p ${BOOST_DIR}
          { travis_retry wget --quiet -O - ${BOOST_URL} | tar --strip-components=1 -xz -C ${BOOST_DIR}; } || exit 1
      fi
      CMAKE_OPTIONS+=" -DBOOST_ROOT=${BOOST_DIR}"

  # Install a newer CMake
  - cd ${TRAVIS_BUILD_DIR}/deps
  - |
    if [[ "${TRAVIS_OS_NAME}" == "linux" ]]; then
      CMAKE_URL="https://cmake.org/files/v3.8/cmake-3.8.2-Linux-x86_64.tar.gz"
      mkdir cmake && travis_retry wget --no-check-certificate --quiet -O - ${CMAKE_URL} | tar --strip-components=1 -xz -C cmake
      export PATH=${TRAVIS_BUILD_DIR}/deps/cmake/bin:${PATH}
    else
      brew upgrade cmake || brew install cmake
    fi
  - cmake --version

  - |
    if [ "$COVERALLS" == "ON" ]; then
      wget http://downloads.sourceforge.net/ltp/lcov-1.12.tar.gz
      tar xf lcov-1.12.tar.gz
      sudo make -C lcov-1.12/ install
      gem install coveralls-lcov
      CMAKE_OPTIONS+=" -DCMAKE_BUILD_TYPE=Coverage"
    fi

script:
  - BUILD_DIR=${TRAVIS_BUILD_DIR}/build
  - mkdir -p ${BUILD_DIR} && cd ${BUILD_DIR}
  - cmake .. ${CMAKE_OPTIONS}
  - make
  - if [ "$COVERALLS" == "ON" ]; then make coverage; fi
  - if [ "$BUILD_TYPE" == "Debug" ] || [ "$BUILD_TYPE" == "Release" ]; then ctest -VV --schedule-random; fi

after_success:
  - |
    if [ "$COVERALLS" == "ON" ]; then
      lcov --compat-libtool --directory . --capture --output-file coverage.info
      coveralls-lcov coverage.info
    fi
